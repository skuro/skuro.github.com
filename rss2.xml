<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title type="text" xml:lang="en">SKURO! -- Shading lights</title>
    <link type="application/atom+xml" href="http://skuro.tk/rss2/" rel="self"/>
    <link type="text" href="http://skuro.tk" rel="alternate"/>
    <updated>2011-11-27T00:49:02+01:00</updated>
    <id>http://skuro.tk</id>
    <author>
        <name>Carlo Sciolla</name>
    </author>
    <rights>Copyright (c) 2010-2011 Carlo Sciolla</rights>
    
---
---
<entry>
  <title>Maven 3 Cookbook reviewed</title>
  <link href="http://skuro.tk/2011/11/15/maven-3-cookbook-reviewed/"/>
  <updated>2011-11-15T00:00:00+01:00</updated>
  <id>http://skuro.tk/2011/11/15/maven-3-cookbook-reviewed/</id>
  <summary type="html">&lt;p&gt;Better late than ever, here you can find my review on the Packt
Publishing &lt;a href=&quot;http://www.google.nl/url?sa=t&amp;amp;rct=j&amp;amp;q=packt&amp;amp;source=web&amp;amp;cd=1&amp;amp;ved=0CCkQFjAA&amp;amp;url=http%3A%2F%2Fwww.packtpub.com%2F&amp;amp;ei=2VbCTq6qHsjs-gbEzZD_DQ&amp;amp;usg=AFQjCNE3QDtLQQneLEduZpKvWcyN8Bp3kg&amp;amp;sig2=AHMqZnDXQwCV5prbVMayGQ&quot;&gt;Apache Maven 3 Cookbook&lt;/a&gt; written by &lt;a href=&quot;http://srirangan.net/&quot;&gt;Srirangan&lt;/a&gt;. Let's see what it has to offer.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2&gt;The basics&lt;/h2&gt;

&lt;p&gt;The author aims to talk to Maven, and possibly &lt;span title=&quot;Application Lifecycle Management&quot;&gt;ALM&lt;/span&gt;, illiterates. This means the first step is to allow the reader to bootstrap his build infrastructure. This is one of the main Maven features, and the first chapters are easily leaping from nothing to a QA and TDD enabled build system. The book exploits Maven magic all the way there, and goes really fast to the target, no time for digressions on how, why or how does it compare with other build systems.&lt;/p&gt;

&lt;h2&gt;The ALM&lt;/h2&gt;

&lt;p&gt;Chapter 3 it's a bit off topic, even though it's probably for the greater good: it broadens the attention to ALM as a whole, all on open source products such as Hudson/Jenkins, SCM and a bit of agile. The topic is so huge that one single chapter cannot afford to cover it extensively, nor effectively: take it as an introduction to software lifecycle management, and dig somewhere else if you want more (and you definitely want). Chapter 4 indulges a bit more in QA and non functional build features, such as documentation and reporting. After all, the real mission of Maven &lt;strong&gt;is&lt;/strong&gt; ALM.&lt;/p&gt;

&lt;h2&gt;The Meat&lt;/h2&gt;

&lt;p&gt;Chapters 5 to 9 form the really juicy part of the book. I'm not going to rewrite the &lt;a href=&quot;http://www.packtpub.com/toc/apache-maven-3-cookbook-table-contents&quot;&gt;TOC&lt;/a&gt; here, but it's definitely a rich set of handy recipes that can either directly target common needs or provide inspirational snippets that will effectively help you writing your POM. Good marks for the attention to languages other than Java (but bad marks for forgetting &lt;a href=&quot;https://github.com/talios/clojure-maven-plugin&quot;&gt;Clojure&lt;/a&gt;!).&lt;/p&gt;

&lt;p&gt;These chapters offer much more value than the previous, as they're better aiming at developer needs. Still, focus could have been more towards existing Maven users, leaving the newbies to better learning paths.&lt;/p&gt;

&lt;h2&gt;Overall impression&lt;/h2&gt;

&lt;blockquote&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; If you are already a Maven literate, it's a book you probably want to have close to your keyboard. Just forget about the first three or four chapters.
&lt;/blockquote&gt;


&lt;p&gt;The book is an authentic source of good base recipes, that you would keep on your desk for quick reference of specific build tasks you need to implement (and your Google foo is weak). All the recipes are provided with a little description of what happens under the hood, so that you may use such knowledge to build upon them your more complex procedures. The whole focus on the book is on getting things done, with
lesser attention to fully understanding Maven: after all, a recipes book cannot replace a cooking course. As a result, its tutorial style of presenting recipes completely overlooks fundamental concepts such as plugins, executions and goals, with seldom sloppy terminology (&quot;archetype:generate&quot; is a goal, not a command). While it can be good to always have this book on your desk, if you're a Maven newbie it's highly recommended to look somewhere else to build up your knowledge.&lt;/p&gt;

&lt;h2&gt;Full disclosure&lt;/h2&gt;

&lt;p&gt;I was asked by Packt to provide this online review, for which I've been handed over a digital preview of the book.&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Slides from Alfresco the Clojure way</title>
  <link href="http://skuro.tk/2011/11/10/slides-from-alfresco-the-clojure-way/"/>
  <updated>2011-11-10T00:00:00+01:00</updated>
  <id>http://skuro.tk/2011/11/10/slides-from-alfresco-the-clojure-way/</id>
  <summary type="html">&lt;p&gt;I just gave a talk at the Alfresco DevCon 2011 in London, and I published the slides at slideshare:&lt;/p&gt;

&lt;div style=&quot;width:425px; padding-left: 10%&quot; id=&quot;__ss_10104981&quot;&gt;
&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/10104981&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;There's also an &lt;a href=&quot;http://slidesha.re/uqUqOW&quot;&gt;extended version&lt;/a&gt; of the presentation that I originally wrote, which ended up being too big for the time slot I had.&lt;/p&gt;

&lt;p&gt;Hope you either enjoyed the talk or the slides, next steps are getting to &lt;a href=&quot;https://github.com/skuro&quot;&gt;GitHub&lt;/a&gt; and fork &lt;a href=&quot;https://github.com/skuro/lambdalf&quot;&gt;lambdalf&lt;/a&gt; and &lt;a href=&quot;https://github.com/skuro/spring-webscripts-addon-clojure&quot;&gt;clojure webscripts&lt;/a&gt; away!&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>October Amsterdam Clojure with Uncle Bob</title>
  <link href="http://skuro.tk/2011/09/27/october-amsterdam-clojure-with-uncle-bob/"/>
  <updated>2011-09-27T00:00:00+02:00</updated>
  <id>http://skuro.tk/2011/09/27/october-amsterdam-clojure-with-uncle-bob/</id>
  <summary type="html">&lt;p&gt;I'm very excited to announce that we have finalized the details, and
Wednesday, October 12th we're going to have a great &lt;a href=&quot;http://bit.ly/ams-clj&quot;&gt;Amsterdam Clojure meetup&lt;/a&gt;&quot;, with great talks and an awesome guest speaker: &lt;a href=&quot;http://twitter.com/#!/unclebobmartin&quot;&gt;&quot;Uncle&quot; Bob Martin&lt;/a&gt; from &lt;a href=&quot;http://www.objectmentor.com/&quot;&gt;Object Mentor&lt;/a&gt; and of &lt;a href=&quot;http://www.cleancoders.com/&quot;&gt;Clean Coders&lt;/a&gt; fame.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;http://www.sourcesense.com&quot;&gt;Sourcesense&lt;/a&gt;, which is once again backing up and ultimately allowing this event to happen in an awesome location such as the &lt;a href=&quot;http://www.dezwijger.nl/&quot;&gt;Pakhuis de Zwijger&lt;/a&gt;, I look forward to meet a number of Clojure enthusiast, newcomers or tired Java developers looking for something new.&lt;/p&gt;

&lt;p&gt;We have limited seating possibilities, so make sure to register at the &lt;a href=&quot;http://www.meetup.com/The-Amsterdam-Clojure-Meetup-Group/events/33351892/&quot;&gt;meetup official page&lt;/a&gt; to ensure there will be a spot for you!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://bit.ly/ams-clj&quot;&gt;&lt;img src=&quot;http://download.skuro.tk/flyer.jpg&quot; alt=&quot;&amp;quot;Click to register&amp;quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Reviewing Maven 3 Cookbook from Packt Publishing</title>
  <link href="http://skuro.tk/2011/09/06/reviewing-maven-3-cookbook-from-packt-publishing/"/>
  <updated>2011-09-06T00:00:00+02:00</updated>
  <id>http://skuro.tk/2011/09/06/reviewing-maven-3-cookbook-from-packt-publishing/</id>
  <summary type="html">&lt;p&gt;Packt Publishing recently proposed me to review their new &lt;a href=&quot;http://www.packtpub.com/apache-maven-3-0-cookbook/book&quot;&gt;book&lt;/a&gt; &lt;em&gt;Maven 3 Cookbook&lt;/em&gt; written by &lt;a href=&quot;http://srirangan.net/&quot;&gt;Srirangan&lt;/a&gt;. I just received a copy of the book, I'll start reading it immediately and provide my review in a future blog post here.&lt;/p&gt;

&lt;p&gt;In the meanwhile, here's the book &lt;a href=&quot;http://www.packtpub.com/apache-maven-3-0-cookbook/book&quot;&gt;home page&lt;/a&gt; where to find the detailed &lt;a href=&quot;http://www.packtpub.com/toc/apache-maven-3-cookbook-table-contents&quot;&gt;table of contents&lt;/a&gt; and a sample chapter.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Clojure makes it to the Alfresco DevCon2011</title>
  <link href="http://skuro.tk/2011/09/04/clojure-makes-it-the-alfresco-devcon-2011-emea-london/"/>
  <updated>2011-09-04T00:00:00+02:00</updated>
  <id>http://skuro.tk/2011/09/04/clojure-makes-it-the-alfresco-devcon-2011-emea-london/</id>
  <summary type="html">&lt;p&gt;If you're a bit into Alfresco, you surerly know what the &lt;a href=&quot;http://www.amiando.com/alfresco-devcon-london-2011.html&quot;&gt;DevCon&lt;/a&gt; is.&lt;/p&gt;

&lt;p&gt;To use the same words from &lt;a href=&quot;http://blogs.alfresco.com/wp/devcon/2011/08/04/save-the-date-alfresco-devcon-san-diego-london/&quot;&gt;Jeff Potts&lt;/a&gt;:
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;/p&gt;

&lt;blockquote&gt;the premier event for digging into the details of the Alfresco platform and collaborating with others who are doing the same&lt;/blockquote&gt;


&lt;p&gt;Now, as soon as I received the &lt;a href=&quot;http://ecmarchitect.com/archives/2011/08/09/1449&quot;&gt;CallForPapers&lt;/a&gt; I immediately (and impulsively!) submitted a talk named &lt;em&gt;Alfresco, the Clojure way&lt;/em&gt; in the Customizing Alfresco track, where I wanted to introduce to enthusiastic Alfresco developers how to do their job using a fantastic &lt;a href=&quot;http://clojure.org&quot;&gt;programming language&lt;/a&gt;. It was just last week that I was notified that yes, my talk made it to the conference schedule! Clojure goes to London!&lt;/p&gt;

&lt;p&gt;It will be great chance for Clojure to prove itself a great tool, and to get some more exposure to software professionals around Europe and beyond. Now that things got serious, I really need to put my presentation together, and that's where you can provide some help.&lt;/p&gt;

&lt;p&gt;I still don't know the time slot the presentation will be given, but surely enough I'll publish online the full version of it as soon as I'll be back from London. The following is the initial list of topics I'd like to cover, but I'm eager to know from you what you would like to add to it.&lt;/p&gt;

&lt;h2&gt;High level topics&lt;/h2&gt;

&lt;ul&gt;
    &lt;li&gt;crash-course on &lt;a href=&quot;http://clojure.org/reader&quot;&gt;Clojure syntax&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;extremely fast digression on some core language features and &lt;a href=&quot;http://en.wikipedia.org/wiki/Functional_programming&quot;&gt;functional programming&lt;/a&gt; topics&lt;/li&gt;
    &lt;li&gt;introduction to &lt;a href=&quot;https://github.com/skuro/lambdalf&quot;&gt;lambdalf&lt;/a&gt;, a Clojure adapter to the Alfresco &lt;a href=&quot;http://wiki.alfresco.com/wiki/Java_Foundation_API&quot;&gt;Foundation API&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;introduction to the &lt;a href=&quot;https://github.com/skuro/spring-webscripts-addon-clojure&quot;&gt;Clojure addon&lt;/a&gt; for the Spring Web Script framework&lt;/li&gt;
    &lt;li&gt;show and tell: start Alfresco, start a &lt;a href=&quot;https://github.com/technomancy/swank-clojure&quot;&gt;swank&lt;/a&gt; server and do live coding against the repository&lt;/li&gt;
    &lt;li&gt;&lt;em&gt;OPTIONAL:&lt;/em&gt; showcase a Clojure-based &lt;a href=&quot;https://github.com/skuro/lambdalf-samples&quot;&gt;sample&lt;/a&gt; Alfresco application&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Again, I don't know how much time I'll be given, so I can't even guarantee I'll have time for all the above topics to get a proper introduction, but since I also might have still enough time to cover other topics, what would you like to see in there?&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>H2 embedded DB and Alfresco 3.4</title>
  <link href="http://skuro.tk/2011/08/03/h2-embedded-db-and-alfresco-3-4/"/>
  <updated>2011-08-03T00:00:00+02:00</updated>
  <id>http://skuro.tk/2011/08/03/h2-embedded-db-and-alfresco-3-4/</id>
  <summary type="html">&lt;p&gt;One of the most useful thing an embedded DB can do for you is to provide a clean environment in your automated tests to use as a clean slate where to repeatedly and reliably test your code. It's been a while since Alfresco &lt;a href=&quot;http://issues.alfresco.com/jira/browse/ALFCOM-3691&quot;&gt;broke compatibility&lt;/a&gt; with some embedded DB we used to run our tests (&lt;a href=&quot;http://hsqldb.org/&quot;&gt;HSQLDB&lt;/a&gt; above all others).&lt;/p&gt;

&lt;p&gt;I recently regained interest into cutting out any useless dependency on MySQL or PostgreSQL on the test server to run my Alfresco tests, and H2 looked sexy. I found &lt;a href=&quot;http://www.codinginahurry.com/2010/11/27/running-alfresco-33-with-embedded-database-h2-in-postgresql-compability-mode/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://issues.alfresco.com/jira/browse/ALF-3537&quot;&gt;there&lt;/a&gt; some promising work by other people, but none worked for me out of the box. I then started from scratch using PostgreSQL DB scripts and voila! Now I have back my Alfresco running against an embeddable DB! You can see &amp;amp; fork &lt;a href=&quot;http://bit.ly/nIJuLY&quot;&gt;the results&lt;/a&gt; of my job if you like. It's supposed to help you with a Maven Alfresco project, but you can probably benefit from it even if you're using some other build tools.&lt;/p&gt;

&lt;p&gt;As soon as you have all those files in your classpath, be sure you edit your &lt;em&gt;alfresco-global.properties&lt;/em&gt; like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;db.driver=org.h2.Driver
db.url=jdbc:h2:alf_data/h2_data/alfresco
db.username=alfresco
db.password=alfresco
hibernate.dialect=org.hibernate.dialect.H2Dialect
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure you're using an hibernate version &amp;gt;= 3.1 as per H2 &lt;a href=&quot;http://www.h2database.com/html/tutorial.html#using_hibernate&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Verifying my Technorati claim</title>
  <link href="http://skuro.tk/2011/05/11/verifying-my-technorati-claim/"/>
  <updated>2011-05-11T00:00:00+02:00</updated>
  <id>http://skuro.tk/2011/05/11/verifying-my-technorati-claim/</id>
  <summary type="html">&lt;p&gt;You can safely ignore this entry, as it's only to comply to &lt;a href=&quot;http://technorati.com/&quot;&gt;technorati&lt;/a&gt; request to add a random code in a blog post to validate it.&lt;/p&gt;

&lt;p&gt;I placed the code in this page, can you spot it?&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color: #ffffff;&quot;&gt; UVBRKNJTRFH7&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>More Clojure for Spring Surf</title>
  <link href="http://skuro.tk/2011/05/10/more-clojure-for-spring-surf/"/>
  <updated>2011-05-10T00:00:00+02:00</updated>
  <id>http://skuro.tk/2011/05/10/more-clojure-for-spring-surf/</id>
  <summary type="html">&lt;p&gt;After some time from my &lt;a href=&quot;http://www.skuro.tk/2010/05/23/spring-surf-meets-clojure&quot;&gt;initial announcement&lt;/a&gt;, I've started again working on my &lt;a href=&quot;https://github.com/skuro/spring-webscripts-addon-clojure&quot;&gt;Clojure addon for Spring Surf&lt;/a&gt;. While it's still a rudimentary piece of glue code, it's now getting better and better, so much that I decided it's good enough now to release an alpha version on &lt;a href=&quot;http://clojars.org/it.sk.spring.surf.clojure/spring-webscripts-addon-clojure&quot;&gt;clojars&lt;/a&gt;. Here's what this library currently provides:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;a &lt;a href=&quot;https://github.com/skuro/spring-webscripts-addon-clojure/blob/master/src/main/java/org/springframework/extensions/webscripts/processor/ClojureScriptProcessor.java&quot;&gt;ScriptProcessor&lt;/a&gt; that allows webscript controllers to be written in Clojure&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://github.com/skuro/spring-webscripts-addon-clojure/blob/master/src/main/clojure/spring/surf/webscript.clj&quot;&gt;a &lt;em&gt;WebScript&lt;/em&gt; protocol and some utility functions&lt;/a&gt; to ease development of your own web scripts&lt;/li&gt;
    &lt;li&gt;enough &lt;a href=&quot;https://github.com/skuro/spring-webscripts-addon-clojure/tree/master/src/main/resources/org/springframework/extensions/clj/webscripts&quot;&gt;spring configuration&lt;/a&gt; to enable this addon just by importing the provided contextes&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The approach is indeed easy and hopefully straightforward: the idea is to have your WebScript clojure controllers return an instance of a concrete implementation of the WebScript protocol, which will implement the &lt;em&gt;run&lt;/em&gt; method the way you like.&lt;/p&gt;

&lt;p&gt;Here's the sample code from a &lt;a href=&quot;https://gist.github.com/965008&quot;&gt;gist&lt;/a&gt; you might want to have a look at to better understand how to use this library:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/965008.js?file=sample.get.clj&quot;&gt;&lt;/script&gt;


&lt;p&gt;You can also find other samples in the project &lt;a href=&quot;https://github.com/skuro/spring-webscripts-addon-clojure/tree/master/src/test/resources/webscripts/test&quot;&gt;tests&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The next episode will be about &lt;a href=&quot;https://github.com/skuro/lambdalf&quot;&gt;&lt;em&gt;lambdalf&lt;/em&gt;&lt;/a&gt;, an Alfresco AMP I've been initially developing to prove the Clojure surf addon works fine, but that is now growing to be a full blown project by itself: a Clojure API for Alfresco!&lt;/p&gt;

&lt;p&gt;Stay tuned. &lt;span style=&quot;color: #ffffff;&quot;&gt;UVBRKNJTRFH7&lt;/span&gt;&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Performance boost in Clojure 1.3 (alpha4)</title>
  <link href="http://skuro.tk/2011/01/24/performance-boost-in-clojure-1-3/"/>
  <updated>2011-01-24T00:00:00+01:00</updated>
  <id>http://skuro.tk/2011/01/24/performance-boost-in-clojure-1-3/</id>
  <summary type="html">&lt;p&gt;As release 1.3 of Clojure is &lt;a href=&quot;http://www.assembla.com/spaces/clojure/milestones/238781-release-next&quot;&gt;on its way&lt;/a&gt;, I decided to give the currently available alpha4 a try and see some of the good stuff it brings. First thing first, I wanted to experiment myself with the performance gain that the extended support for native types would bring. I ran into an old &lt;a title=&quot;old post, but inspirational&quot; href=&quot;http://hughw.blogspot.com/2009/01/clojure-vs-javafx-script-only-5x-slower.html&quot;&gt;post&lt;/a&gt; from which I got the inspiration for the specific test to run: the &lt;a title=&quot;Takeuchi function on Wikipedia&quot; href=&quot;http://en.wikipedia.org/wiki/Tak_(function)&quot;&gt;Takeuchi function&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-340&quot; title=&quot;Full disclosure: I own a Triumph Street Triple and I love Clojure&quot; src=&quot;/img/post/clj-triple.jpg&quot; alt=&quot;Full disclosure: I own a Triumph Street Triple and I love Clojure&quot; width=&quot;375&quot; height=&quot;322&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Java implementation for Tak provided me with a bottom line for performance comparison:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/788834.js?file=Tak.java&quot;&gt;&lt;/script&gt;


&lt;p&gt; Then I used the Clojure version provided in the original blog post run to test against Clojure 1.2: &lt;script src=&quot;https://gist.github.com/788834.js?file=tak2.clj&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Finally, I leveraged the new syntax for the &lt;a href=&quot;http://dev.clojure.org/display/doc/Enhanced+Primitive+Support&quot;&gt;enhanced primitives support&lt;/a&gt; to test against Clojure 1.3 (thanks to &lt;a href=&quot;http://twitter.com/neotyk&quot;&gt;neotyk&lt;/a&gt; to point that out to me):&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/788834.js?file=tak.clj&quot;&gt;&lt;/script&gt;


&lt;p&gt;As you can see, timing is tracked from the application code, as various accessory overhead like JVM and Clojure runtime bootstrap are not in the scope of this post.&lt;/p&gt;

&lt;p&gt;As this benchmark is &quot;just for fun&quot;, I won't pretent I did an extensive benchmark, or that I engineered a bullet proof benchmark strategy and the like. I just ran the above code some tens of times and here follows the average running time for the three versions:&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;NOTE: an updated benchmark is provided down below&lt;/span&gt;
&lt;span style=&quot;color: #ff0000;&quot;&gt;NOTE2: to have a more fair performance comparison, &lt;a href=&quot;#reloaded&quot;&gt;keep reading&lt;/a&gt;&lt;/span&gt;
&lt;img class=&quot;aligncenter size-full wp-image-344&quot; title=&quot;Benchmark results&quot; src=&quot;http://www.skuro.tk/wp-content/uploads/2011/01/clj-bench-graph.png&quot; alt=&quot;Average running time in ms&quot; width=&quot;467&quot; height=&quot;292&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The results tells of a &lt;strong&gt;~4.5x&lt;/strong&gt; speed gain, &lt;del datetime=&quot;2011-01-26T09:59:07+00:00&quot;&gt;getting close to match plain Java code performance&lt;/del&gt;.&lt;/p&gt;

&lt;p&gt;Now, even if such a benchmark won't be any news to the Clojure community, it's still &lt;strong&gt;absolutely awesome&lt;/strong&gt; to see such a performance gain in the next release of this beautiful Lispy language :-)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update: &lt;/strong&gt;following the advice by &lt;strong&gt;Jürgen Hötzel&lt;/strong&gt; in his comment, I slightly modified my Clojure sources to change &lt;span style=&quot;font-family: monospace;&quot;&gt;&lt;a href=&quot;http://clojure.github.com/clojure/clojure.core-api.html#clojure.core/-&quot;&gt;clojure.core/-&lt;/a&gt;&lt;/span&gt; with &lt;span style=&quot;font-family: monospace;&quot;&gt;&lt;a href=&quot;http://clojure.github.com/clojure/clojure.core-api.html#clojure.core/unchecked-subtract&quot;&gt;clojure.core/unchecked-subtract&lt;/a&gt;&lt;/span&gt; and re-run the test. Here's the final results, which are way better for Clojure, especially for version 1.2:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-350&quot; title=&quot;clj-bench-graph-unchecked&quot; src=&quot;http://www.skuro.tk/wp-content/uploads/2011/01/clj-bench-graph-unchecked.png&quot; alt=&quot;&quot; width=&quot;493&quot; height=&quot;302&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update 2:&lt;/strong&gt; the following graph shows the impact of the direct use of the &lt;span style=&quot;font-family: monospace;&quot;&gt;recur&lt;/span&gt; special form tested against plain recursive invocation of Tak, as per requested in some comments
&lt;img class=&quot;aligncenter size-full wp-image-353&quot; title=&quot;clj-bench-graph-norecur&quot; src=&quot;http://www.skuro.tk/wp-content/uploads/2011/01/clj-bench-graph-norecur.png&quot; alt=&quot;&quot; width=&quot;476&quot; height=&quot;267&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update 3:&lt;a name=&quot;reloaded&quot;&gt;&lt;/a&gt;&lt;/strong&gt; even if this all started as a quick&amp;amp;dirty, amatorial benchmark, it attracted quite some &lt;a href=&quot;http://news.ycombinator.com/item?id=2134950&quot;&gt;attentions&lt;/a&gt;, demanding more fair and precise benchmarks, especially on the Java vs Clojure comparison. As in the Java version of Tak I used Integers and not primitive types, there is an unfair burden Java had to carry along the computation. The following is the result of a re-run of the test for Java (using primitive &lt;span style=&quot;font-family: monospace;&quot;&gt;long&lt;/span&gt;) and Clojure 1.3:
&lt;img class=&quot;aligncenter size-full wp-image-356&quot; title=&quot;clj-bench-reloaded&quot; src=&quot;http://www.skuro.tk/wp-content/uploads/2011/01/clj-bench-reloaded.png&quot; alt=&quot;&quot; width=&quot;463&quot; height=&quot;272&quot; /&gt;&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>SproutCore encoding gotchas</title>
  <link href="http://skuro.tk/2010/09/30/sproutcore-encoding-gotchas/"/>
  <updated>2010-09-30T00:00:00+02:00</updated>
  <id>http://skuro.tk/2010/09/30/sproutcore-encoding-gotchas/</id>
  <summary type="html">&lt;p&gt;These days I'm trying out &lt;a title=&quot;Sproutcore homepage&quot; href=&quot;http://www.sproutcore.com/&quot;&gt;SproutCore&lt;/a&gt;, an MVC framework written in Javascript that aims to help developing rich client web applications. I'm not going to entertain you with any juicy technical spotlight, as they'll hopefully find their way in these pages later on with plenty of details. At the moment I'd like to share a little problem I got stuck with that had a non trivial solution&lt;del datetime=&quot;2010-09-28T20:03:47+00:00&quot;&gt;,  at least for the noob I am&lt;/del&gt;.&lt;/p&gt;

&lt;p&gt;First thing you have to know is that SproutCore ships with both a rich &lt;a title=&quot;SproutCore source code&quot; href=&quot;http://github.com/sproutcore/sproutcore&quot;&gt;Javascript library&lt;/a&gt; and a set of building tools written in ruby, which go under the code name of &lt;a title=&quot;Abbot source code&quot; href=&quot;http://github.com/sproutcore/abbot&quot;&gt;abbot&lt;/a&gt;. New projects kickstart, &lt;a title=&quot;sc-gen&quot; href=&quot;http://wiki.sproutcore.com/Abbot+Spec+sc-gen&quot;&gt;scaffolding&lt;/a&gt;, &lt;a title=&quot;sc-docs&quot; href=&quot;http://blog.sproutcore.com/post/150789672/now-available-sproutcore-1-0-reference-docs&quot;&gt;automatic documentation&lt;/a&gt; are among the features that abbot provides you with, along with the ability to &lt;a title=&quot;sc-server&quot; href=&quot;http://wiki.sproutcore.com/BuildTools-Reference+sc-server&quot;&gt;run you application&lt;/a&gt; on a local web server during development. Sounds cool, isn't it? And I didn't even mention it's integrated &lt;a title=&quot;unit tests&quot; href=&quot;http://wiki.sproutcore.com/UnitTesting-Introduction&quot;&gt;unit testing&lt;/a&gt; facility!&lt;/p&gt;

&lt;p&gt;I immediately tried to give it a shot, and ran through &lt;a title=&quot;Todos tutorial&quot; href=&quot;http://wiki.sproutcore.com/Todos%C2%A0Intro&quot;&gt;one of the tutorials&lt;/a&gt; to write down my first HelloWorld. The first pieces got into place, and after the first quick round I left my hello world project in such a state that I already decided to build a simple but complete application right away. How arrogant.&lt;/p&gt;

&lt;p&gt;The second day something Bad™ happened, I cannot really tell what, but &lt;a title=&quot;#fail&quot; href=&quot;http://gist.github.com/597780&quot;&gt;everything&lt;/a&gt; started &lt;a title=&quot;#fail&quot; href=&quot;https://gist.github.com/f2a107a3a0a2cd49e4e5&quot;&gt;to fall apart&lt;/a&gt;: no one tool in the abbot suite worked properly, I was no more able to get any further and I started a painful journey of which I only remember installing and changing between zillions of ruby versions, crying and considering to give up with IT and to start my own religion to make a living.&lt;/p&gt;

&lt;p&gt;But then I simply resorted to the #sproutcore IRC channel and I got the tip that saved the day (thanks &lt;a title=&quot;my saviour&quot; href=&quot;http://www.flashesofpanic.com/&quot;&gt;pjmorse&lt;/a&gt;!):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;export LC_CTYPE=UTF-8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&quot;Boom baby!&quot; I said, everything got back to normality. I can save my holy plans for a rainy day. It seems that encoding is an &lt;a title=&quot;#fail&quot; href=&quot;http://www.taylorluk.com/2009/08/ruby-19-encoding-gotcha-retreat-to-ascii-8bit&quot;&gt;endless&lt;/a&gt;&lt;a title=&quot;#fail&quot; href=&quot;http://gnuu.org/2009/11/02/ruby-1-9-encoding-issues-again/&quot;&gt; source&lt;/a&gt; of &lt;a title=&quot;#fail&quot; href=&quot;http://stackoverflow.com/questions/3597255/why-does-my-sproutcore-development-server-drop-connections-with-invalid-byte-seq&quot;&gt;issues&lt;/a&gt; in the ruby world, so that probably if you have any ruby knowledge whatsoever this all rant might just seem pointless and the solution trivial.&lt;/p&gt;

&lt;p&gt;Next episode on SproutCore (if everything goes well): a sample SproutCore + Clojure application. See you there!&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Crampi alla lingua</title>
  <link href="http://skuro.tk/2010/09/29/crampi-alla-lingua-italiano-inglese/"/>
  <updated>2010-09-29T00:00:00+02:00</updated>
  <id>http://skuro.tk/2010/09/29/crampi-alla-lingua-italiano-inglese/</id>
  <summary type="html">&lt;p&gt;Per la prima volta mi trovo a scrivere in Italiano in questo blog. Contando che vorrei affrontare l'argomento della guerra, se cos&amp;igrave; la si pu&amp;ograve; chiamare, tra l'Italiano e l'Inglese, mi sembra anche appropriato.&lt;/p&gt;

&lt;p&gt;Tutto parte da un interessante &lt;a href=&quot;http://federicogobbo.wordpress.com/2010/09/16/goodbye-italian-hello-italglish/?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed:+FedericoGobboBlogo+(Federico+Gobbo+Blog(o))&quot;&gt;blog post&lt;/a&gt; che cerca di mettere in luce le insidie di una politica aggressiva di apprendimento dell'Inglese, a scapito di un sempre pi&amp;ugrave; bistrattato Italiano: &lt;a href=&quot;http://lepolitichelinguistiche.cafebabel.com/it/post/2008/04/10/TV-pubblica-e-sottotitoli&quot;&gt;l'eliminazione del doppiaggio dalle TV di stato&lt;/a&gt; e &lt;a href=&quot;http://lepolitichelinguistiche.cafebabel.com/it/post/2010/09/11/L-anglificazione-della-scuola-italiana&quot;&gt;balzi in avanti maoisti nell'inglese a scuola&lt;/a&gt;. Vengono affrontati argomenti che mi stanno a cuore tanto da giustificare un intero post e non un semplice commento a margine.&lt;/p&gt;

&lt;p&gt;Vediamo un po'.&lt;/p&gt;

&lt;blockquote&gt;Il motto &quot;vietato doppiare!&quot; in uso in paesi come l'Olanda [...] ha procurato un arretramento dell'olandese e dello svedese in tutti gli ambiti, non solo quelli formali, al punto che uno straniero pu&amp;ograve; vivere l&amp;igrave; senza mai imparare una parola di olandese&lt;/blockquote&gt;


&lt;p&gt;Da emigrato proprio in Olanda, confermo l'avanzamento dell'inglese in questa nazione, tanto da spingere a dichiarazioni pubbliche alcune cariche dello stato (ahim&amp;eacute;, ho perso il link, vi dovrete fidare)&lt;strong&gt; per limitare allo stretto necessario campagne pubblicitarie in inglese, in nome della conservazione della lingua&lt;/strong&gt;. Badate bene, &amp;egrave; un Paese dove&lt;strong&gt; un anziano di estrema periferia pu&amp;ograve; essere in grado di comunicare nella lingua d'Albione&lt;/strong&gt;. Una situazione che, nella pi&amp;ugrave; rosea delle previsioni, l'Italia riuscir&amp;agrave; a raggiungere tra mezzo secolo.&lt;/p&gt;

&lt;p&gt;Epper&amp;ograve; devo anche dire che al momento il Nederlandese non vive nessun tipo di relegazione, anche e soprattutto sul posto di lavoro, dove chi non vive di IT come il sottoscritto pu&amp;ograve; avere discrete difficolt&amp;agrave; a trovare un impiego.&lt;/p&gt;

&lt;p&gt;Ma andiamo avanti.&lt;/p&gt;

&lt;blockquote&gt;se [si] prova a parlare nella loro lingua, loro gli rispondono in inglese. Se a un turista occasionale questa situazione pu&amp;ograve; indubbiamente essere utile, per un residente pu&amp;ograve; creare un apartheid linguistico, al punto tale che uno straniero non riuscir&amp;agrave; mai ad integrarsi veramente nel tessuto sociale del luogo&lt;/blockquote&gt;


&lt;p&gt;Di nuovo, concordo pienamente. La quasi totalit&amp;agrave; della mia rete di amicizie in Olanda &amp;eacute; fatta di italiani ed immigrati di varie nazioni. &quot;Apartheid&quot; &amp;eacute; di origine Olandese, e ben si presta ad esprimere il concetto di come l'uomo sia tendenzialmente impermeabile ad avvicinamenti alla sfera privata da parte di chi non parla la sua lingua. &amp;eacute; un dato di fatto a cui mi sono ormai rassegnato.&lt;/p&gt;

&lt;p&gt;La soluzione &amp;egrave; una ed una soltanto: &lt;strong&gt;emigrare in un altro paese comporta anche la necessit&amp;agrave; di impararne la lingua&lt;/strong&gt;. E l'Olanda &amp;egrave; anche molto ben disposta ad insegnare la propria lingua e cultura agli immigrati, con &lt;a href=&quot;http://www.iamsterdam.com/en/living/official-matters/municipal-integration&quot;&gt;corsi&lt;/a&gt; offerti a costi ridicoli. Di fatto, la maggior parte degli immigrati in Olanda ricade in fasce di reddito medio basse, con altrettanto bassi livelli di scolarizzazione, e con &lt;strong&gt;una penetrazione del Nederlandese molto forte&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Siamo ormai in chiusura.&lt;/p&gt;

&lt;blockquote&gt;Andr&amp;agrave; a finire che faremo una cosa all'italiana, [...] parleremo un orrido spaghetti English pensando di essere molto bravi finch&amp;eacute; non ci scontreremo contro la dura realt&amp;agrave; [...]. Ma in quel momento, sar&amp;agrave; troppo tardi per svegliarsi.&lt;/blockquote&gt;


&lt;p&gt;Essendo il discorso imperniato in particolare sul doppiaggio dei film, non mi trovo assolutamente d'accordo con le conclusioni. Ho sempre sostenuto che il doppiaggio dei prodotti televisivi o cinematografici in italiano sia un'enorme deficit nel nostro apprendimento dell'inglese, basti guardare Portogallo e Spagna: in Portogallo, dove il doppiaggio non avviene, si parla mediamente un buon inglese, e basta passare il confine di pochi centimetri per approdare in una Spagna completamente estranea al concetto stesso di inglese.&lt;/p&gt;

&lt;p&gt;Sono assolutamente d'accordo nel sostenere che la cultura e la lingua italiane debbano avere il primato, debbano essere sostenute e che navighino attualmente in cattive acque, ma &lt;strong&gt;questa situazione &amp;eacute; gi&amp;agrave; davanti ai nostri occhi anche senza la presenza dell'inglese in TV&lt;/strong&gt;. Ai giorni nostri l'inglese &amp;eacute; uno strumento fondamentale, che l'italiano medio non riesce ad acquisire in maniera tale da poterlo sfruttare a proprio vantaggio. Tutt'al pi&amp;ugrave; pu&amp;ograve; sperare di dare le indicazioni ad un turista approdato in terra italica.&lt;/p&gt;

&lt;p&gt;Io mi sento di ribaltare il punto di vista: non si pu&amp;ograve; far si che un colpevole disinteresse per la lingua italiana vada a scapito degli interventi che possono migliorare l'apprendimento dell'inglese.&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Spring Surf meets Clojure</title>
  <link href="http://skuro.tk/2010/05/23/spring-surf-meets-clojure/"/>
  <updated>2010-05-23T00:00:00+02:00</updated>
  <id>http://skuro.tk/2010/05/23/spring-surf-meets-clojure/</id>
  <summary type="html">&lt;p&gt;For those who missed it, some time ago the &lt;a href=&quot;http://www.alfresco.com/&quot;&gt;Alfresco&lt;/a&gt; guys &lt;a href=&quot;http://www.alfresco.com/media/releases/2009/12/spring_surf/&quot;&gt;donated&lt;/a&gt; their &lt;a href=&quot;http://wiki.alfresco.com/wiki/Surf_Platform&quot;&gt;Surf Platform&lt;/a&gt; to &lt;a href=&quot;http://www.springsource.com/&quot;&gt;SpringSource&lt;/a&gt;, giving birth to the now-called &lt;a href=&quot;http://www.springsource.org/extensions/se-surf&quot;&gt;SpringSurf&lt;/a&gt;, which is thereby described as:&lt;/p&gt;

&lt;blockquote&gt;a view composition framework for Spring MVC that plugs into your existing Spring applications. It provides a scriptable and content-centric approach to building web applications.&lt;/blockquote&gt;


&lt;p&gt;I'm not going to introduce you how to use this yet-another MVC framework, but Michael Uzquiano provided an &lt;a href=&quot;http://blogs.alfresco.com/wp/uzi/2009/11/03/using-surf-in-your-spring-apps/&quot;&gt;awesome blogpost&lt;/a&gt;, in case you were interested into learning more about it.&lt;/p&gt;

&lt;p&gt;Part of the job of this Spring Surf framework is to provide an easy to use web scripting framework, REST like, that enables you to easily put together a View and, optionally, a Controller to implement a web API, provide them in the classpath together with a small XML descriptor, and your REST API is deployed right away. In the SpringSurf parlance, this is called called WebScript. Again, technical insights about the framework are better explained &lt;a href=&quot;http://blogs.alfresco.com/wp/webcasts/2010/01/introducing-spring-surf-and-spring-web-scripts/&quot;&gt;elsewhere&lt;/a&gt;, so no repetitions here. What I think is cool about Spring Surf, and I'm here with you to discuss, is it's multi-language focus: web script Controllers can be written in Javascript, PHP or Groovy right out of the box, allowing you to choose whichever language you prefer. Moreover, if you just peek at Spring Surf &lt;a href=&quot;https://anonsvn.springframework.org/svn/se-surf/tags/release-1.0.0.M3/spring-webscripts-addons/&quot;&gt;source code&lt;/a&gt;, plugging in support for new languages doesn't look so hard, so I decided to challenge myself and write support for Clojure backed webscripts. You can find the result of my efforts on &lt;a href=&quot;http://github.com/skuro/spring-webscripts-addon-clojure&quot;&gt;github&lt;/a&gt;, with a sample webscript that proves the concept.&lt;/p&gt;

&lt;p&gt;Following the webscript framework praxis, a &lt;em&gt;model&lt;/em&gt; map object is passed around that acts as a container for whichever result your computation will produce, that will at the end handed over to a view rendition engine, &lt;a href=&quot;http://freemarker.sourceforge.net/&quot;&gt;Freemarker&lt;/a&gt; in our case, to build the resulting document. Webscripts are intended to support a number of different output formats, from JSON to XML to plain text, so being generic here is not an option.&lt;/p&gt;

&lt;p&gt;Anyway, the first thing you usually do is to populate the &lt;em&gt;model&lt;/em&gt; map with a number of objects that will be needed by the rendering engine to build the response. To support this use case, this first implementation of the Clojure backend for Spring Surf webscripts expects your Clojure &quot;script&quot; to yield a map, in Clojure sense. This map will be then forwarded to a Freemarker template and used to build a webpage or whatever the user asked for, i.e. this controller:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(ns web.script.test)

{:foo &quot;bar&quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and this freemarker template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foo: ${foo}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will provide &quot;foo: bar&quot; back to the client.&lt;/p&gt;

&lt;p&gt;This is just an experiment at the moment, and far from being production-quality stuff. Still, it has been instructing to build a  Java-to-Clojure integration, and nonetheless it might come in handy when I'll be trying to put more Clojure in my working life.&lt;/p&gt;

&lt;p&gt;(bye)&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Handling Microsoft Windows NTP sync</title>
  <link href="http://skuro.tk/2010/04/23/handling-microsoft-windows-ntp-sync/"/>
  <updated>2010-04-23T00:00:00+02:00</updated>
  <id>http://skuro.tk/2010/04/23/handling-microsoft-windows-ntp-sync/</id>
  <summary type="html">&lt;p&gt;This post should raise some eyebrows around, as I'm advocating Linux since ages and I'm not at all into Microsoft stuff for the 99.99% of my time. This story comes out of that (usually negligible) 0.01%.&lt;/p&gt;

&lt;h2&gt;Why bother with NTP on MS Windows?&lt;/h2&gt;

&lt;p&gt;The Alfresco implementation I'm working on has to integrate with a fully MS-powered environment, with a Domain Controller pulling the strings of network entities such as users and hosts. As the customer has strict security requirements, no remote access can be granted to their intranet, and since their offices are a bit far away from mine, we decided to replicate their environment locally, providing the minimum set of components such as&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;a domain controller (WinServer 2k8)&lt;/li&gt;
    &lt;li&gt;a domain host (WinXP Pro SP2)&lt;/li&gt;
    &lt;li&gt;the Alfresco server (RHELv5.4)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I was able to build up the whole replicated environment, with a relative limited effort, using virtual machines to host all the different operating system on my laptop. I was so happy that everything worked almost at the first shot that I almost died when it all went wrong after the first reboot of the VMs: I couldn't log anymore on the WinXP box!&lt;/p&gt;

&lt;p&gt;It turned out that all clocks drifted away, making Kerberos auth checks fail because of replication attacks protection. Looked like it was time to strengthen my Win-fu and configure NTP in a proper way. This is what I learned.&lt;/p&gt;

&lt;h2&gt;WinServer2k8 and clock management&lt;/h2&gt;

&lt;p&gt;If there's one thing I enjoyed out of all the time spent on these tasks, the prize goes definitely to w32tm: I had to deal with Windows, and there were no windows involved! As usual, whenever I'm typing into a command line, I feel at home. I'm actually writing this whole blog post to take note of the tricks I learned around w32tm and NTP clock sync. Here we go:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Configure NTP servers&lt;/strong&gt;
&lt;blockquote&gt;&lt;pre&gt;w32tm /config /manualpeerlist:&lt;a href=&quot;http://europe.pool.ntp.org&quot; target=&quot;_blank&quot;&gt;europe.pool.ntp.org&lt;/a&gt; \
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /syncfromflags:manual /reliable:no /update&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Query NTP servers&lt;/strong&gt;
&lt;blockquote&gt;&lt;pre&gt;w32tm /stripchart /computer:&lt;a href=&quot;http://europe.pool.ntp.org&quot; target=&quot;_blank&quot;&gt;europe.pool.ntp.org&lt;/a&gt; \
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /samples:5 /dataonly&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Resync clock&lt;/strong&gt;
&lt;blockquote&gt;&lt;pre&gt;w32tm /resync /rediscover&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Allow resync in case of huge drifts&lt;/strong&gt;
If your clock drifted too far away Windows will refuse to sync. In order to disable such check you have to import the following changes (write them in a reg-keys.reg file and double click it):
&lt;blockquote&gt;&lt;pre&gt;Windows Registry Editor Version 5.00
[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\Config]
&quot;MaxNegPhaseCorrection&quot;=dword:ffffffff
&quot;MaxPosPhaseCorrection&quot;=dword:ffffffff&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That's it for now. I hope this will come in handy to somebody else, since I'll try to avoid any more contact with the Microsoft stacks as long as possible, since without grep, find, awk, sed, vim I feel as uncomfortable as &lt;a href=&quot;http://farm4.static.flickr.com/3290/2615393415_0d9e8eb97d.jpg&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Tales from an Icelandic volcano victim</title>
  <link href="http://skuro.tk/2010/04/21/tales-from-an-icelandic-volcano-victim/"/>
  <updated>2010-04-21T00:00:00+02:00</updated>
  <id>http://skuro.tk/2010/04/21/tales-from-an-icelandic-volcano-victim/</id>
  <summary type="html">&lt;p&gt;Last weekend &lt;a href=&quot;http://en.wikipedia.org/wiki/Eyjafjallaj%C3%B6kull&quot;&gt;Eyjafjallaj&amp;ouml;kull&lt;/a&gt; decided my long-planned trip to visit my dear family in Italy had to be exhausting. On Friday, April 16th at 2pm my flight to Milan, scheduled to leave Amsterdam &lt;a href=&quot;http://www.schiphol.nl/&quot;&gt;Schiphol&lt;/a&gt; at 8pm, was eventually cancelled. It had to be the first step of a longer journey, which was planned to be as follows:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;Amsterdam -&amp;gt; Milan&lt;/strong&gt; - Friday, 16th April @8pm&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Milan -&amp;gt; Cagliari&lt;/strong&gt; - Saturday, 17th April @10am&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Cagliari -&amp;gt; Milan&lt;/strong&gt; - Monday, 19th April @12.30pm&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Milan -&amp;gt; Asterdam&lt;/strong&gt; - Monday, 19th April @6pm&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When it was clear that I was not going to leave Amsterdam by plane, I did the only thing you wouldn't take seriously, if you were me: I rented &lt;a href=&quot;http://www.zercustoms.com/news/images/MomoDesign-Lancia-Ypsilon-Sport-b.jpg&quot;&gt;a car&lt;/a&gt; to try and catch the flight leaving Milan the next day. This is the story of this long, long journey.&lt;/p&gt;

&lt;h2&gt;Amsterdam -&amp;gt; Milan: &lt;span style=&quot;color: red;&quot;&gt;CANCELLED&lt;/span&gt;&lt;/h2&gt;


&lt;p&gt;I didn't take note of the steps along the way down to Milan, so I will just write down a short story here.&lt;/p&gt;

&lt;p&gt;We left Amsterdam by car at around 6pm. &quot;We&quot; means just me and my girlfriend, who wasn't 100% sure I had a great idea renting the car. But she supported me all the way long, she even drove for ~300km between Frankfurt and Stuttgart, while I was sleeping next to her. She had to stop around midnight, when we both fell asleep for 2h.&lt;/p&gt;

&lt;p&gt;Coffee, sugar, then I got back at the driver seat and drove with no intermediate stops, if not for fueling, down to Milan.&lt;/p&gt;

&lt;p&gt;We were stopped at the customs between Switzerland and Italy (6am), where three cops checked our pockets, our luggages and even our car trying to find some criminal stuff. Needless to say, they didn't find anything, but we lost 30 precious minutes.&lt;/p&gt;

&lt;p&gt;Fortunately, the traffic jam that usually takes you ages to get through when you're near Milan at rush hours was yet to ramp up, so that we made it on time at Milan airport (7.45am). We left the car at the parking area, grabbed a coffee and waited to take off.&lt;/p&gt;

&lt;h2&gt;Milan -&amp;gt; Cagliari: &lt;span style=&quot;color: green;&quot;&gt; AIRBORNE &lt;/span&gt;&lt;/h2&gt;


&lt;p&gt;This is the most boring part of this diary: everything went really good, no delays, no nothing. We arrived, we enjoyed our time and my beloved &lt;a href=&quot;http://en.wikipedia.org/wiki/Sardinia&quot;&gt;Sardinia&lt;/a&gt; (and a &lt;a href=&quot;http://www.misfits.com/&quot;&gt;Misfits&lt;/a&gt; concert, by the way). As time went by, it was clear that some more troubles were about to come.&lt;/p&gt;

&lt;p&gt;We didn't care until Sunday night, when they announced that Milan airport was definitely closed.&lt;/p&gt;

&lt;h2&gt;Cagliari -&amp;gt; Milan: &lt;span style=&quot;color: red;&quot;&gt; CANCELLED &lt;/span&gt;&lt;/h2&gt;


&lt;p&gt;This hit us badly: we didn't even considered the idea that that ash could get past the Alps, and now we were stuck in an island, even though a beautiful one. We decided to go the traditional way: we bought tickets to get back to Italy &lt;a href=&quot;http://www.mobylines.com/&quot;&gt;by boat&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This time we teamed up with &lt;a href=&quot;http://developer4work.blogspot.com/&quot;&gt;my brother&lt;/a&gt;, &lt;a href=&quot;http://paperina81.deviantart.com/&quot;&gt;his girlfriend&lt;/a&gt; and their awesome, 4 months old son. They had to come back to &lt;a href=&quot;http://en.wikipedia.org/wiki/Pisa&quot;&gt;Pisa&lt;/a&gt;, so that we could share the first part of our trip together.&lt;/p&gt;

&lt;p&gt;We left &lt;a href=&quot;http://en.wikipedia.org/wiki/Iglesias&quot;&gt;Iglesias&lt;/a&gt;, my birth place, at 11am, and after some hours and two stops (feeding, then fueling) we arrived at Olbia at 2.30pm. Having studied in Pisa for 7 years, the whole boat experience became quite familiar and boring long time ago. But those 9 hours passed by quite fast,  as we enjoyed our time together with the little newborn totally starring the show.&lt;/p&gt;

&lt;p&gt;We eventually arrived at &lt;a href=&quot;http://en.wikipedia.org/wiki/Livorno&quot;&gt;Livorno&lt;/a&gt; at 11pm, where my girlfriend's father was awaiting us to give us a lift to Milan. Take note: 60 years old man, driving all night long for a total of 700km just to start working the next day without any rest in between. I hope I'll have the same energy when I'll be aged the same.&lt;/p&gt;

&lt;h2&gt;Milan -&amp;gt; Amsterdam: &lt;span style=&quot;color: red;&quot;&gt; CANCELLED &lt;/span&gt;&lt;/h2&gt;


&lt;p&gt;We got at Milan airport at 2.30am, where we found a surreal, totally empty place that was nonetheless bright, colorful and with all the monitors repeating the same word &quot;cancelled&quot; to death with nobody except us staring at them, as if their only purpose was  to remind us why we were actually there.&lt;/p&gt;

&lt;p&gt;Bathroom, coffee, take back the car from the parking lot and back on track: our former driver headed back to the south, we followed the &lt;a href=&quot;http://en.wikipedia.org/wiki/Pole_star&quot;&gt;Pole Star&lt;/a&gt; (3am).&lt;/p&gt;

&lt;p&gt;They didn't care to stop us again at customs, so we went straight to &lt;a href=&quot;http://en.wikipedia.org/wiki/Basel&quot;&gt;Basel&lt;/a&gt;, around where we took our now traditional 2h nap at around 6am.&lt;/p&gt;

&lt;p&gt;Coffee, sugar, my girlfriend took the driver seat. I slept for the usual 300km and then drove all the way to Amsterdam.&lt;/p&gt;

&lt;h2&gt;The end&lt;/h2&gt;


&lt;p&gt;We arrived at home around 4.30pm. We were both completely exhausted, done, finished. Yet something more was left to do: empty the car, fuel it, take it back to the airport where the rental agency is, and then, finally, back at home, with enough energies left to get on and crush on the bed. 12h of sleep later, the whole story started to look like a long, distant, strange dream.&lt;/p&gt;

&lt;p&gt;It has been devastating, and I don't think I'm going to did it again. Still, the only regret I have is that I didn't take pictures, as my camera was packed within my luggage. I now look at the map above, which pin points all the steps along our way back here, and think &quot;did it&quot;. And I cannot hide a smile.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/post/hourly-map.png&quot; alt=&quot;Our journey, hour by hour&quot; /&gt;&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Amsterdam Clojurians meeting #4 - Dojo style</title>
  <link href="http://skuro.tk/2010/04/14/amsterdam-clojurians-meeting-4-dojo-style/"/>
  <updated>2010-04-14T00:00:00+02:00</updated>
  <id>http://skuro.tk/2010/04/14/amsterdam-clojurians-meeting-4-dojo-style/</id>
  <summary type="html">&lt;p&gt;Today the fourth meeting of the Amsterdam Clojure user group was held at the now usual &lt;a href=&quot;http://www.sourcesense.com&quot;&gt;Sourcesense&lt;/a&gt; offices venue in Amsterdam.&lt;/p&gt;

&lt;p&gt;It has been probably the most successful one until now: thanks to some newcomers we had the most participated event ever with 10 nerdy, awesome geeks sitting together to discuss about nerdy, awesome stuff with lots of parenthesis.&lt;/p&gt;

&lt;p&gt;As previously proposed by &lt;a href=&quot;http://lifeisagraph.net/&quot;&gt;Jeff Rose&lt;/a&gt;, we started thinking about improvements we could provide to the standard Clojure REPL, deciding for colorful messages for the &lt;strong&gt;doc&lt;/strong&gt; function. &lt;a href=&quot;http://sam.aaron.name/&quot;&gt;Sam Aaron&lt;/a&gt; proposed then to follow a dojo-like approach, with a single laptop connected to a projector where everybody has the chance to step in and do some coding while everybody else discuss possible approaches and alternatives.&lt;/p&gt;

&lt;p&gt;The resulting code from this session is available on &lt;a href=&quot;http://github.com/ams-clj/clansi&quot;&gt;github&lt;/a&gt;. It does just a simple thing, it provides a way to override the default &lt;strong&gt;doc&lt;/strong&gt; behavior in order to make use of our custom, colorful implementation of &lt;strong&gt;print-doc&lt;/strong&gt;. And even if it doesn't look like rocket science, I can guarantee that being there and looking at how we came up with that, from some impressive vim-fu showed by &lt;a href=&quot;http://blog.rubyenrails.nl/&quot;&gt;Michiel de Mare&lt;/a&gt; to the clever and clean code provided by &lt;a href=&quot;http://blog.remvee.net/&quot;&gt;Remco van 't Veer&lt;/a&gt;, was indeed a lot of fun!&lt;/p&gt;

&lt;p&gt;If all this sounds interesting to you, go and checkout the group &lt;a href=&quot;http://groups.google.com/group/amsterdam-clojurians&quot;&gt;mailing list&lt;/a&gt; or just show up at the next meeting, second Wednesday of each month at the &lt;a href=&quot;http://www.sourcesense.nl/contact/&quot;&gt;Sourcesense office&lt;/a&gt;.&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>From the grounds up, your Maven powered Alfresco dev box</title>
  <link href="http://skuro.tk/2010/01/14/from-the-grounds-up-maven-alfresco-tutorial/"/>
  <updated>2010-01-14T00:00:00+01:00</updated>
  <id>http://skuro.tk/2010/01/14/from-the-grounds-up-maven-alfresco-tutorial/</id>
  <summary type="html">&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-240&quot; title=&quot;mint alf mvn&quot; src=&quot;/img/post/mint-alf.png&quot; alt=&quot;mint alf mvn&quot; width=&quot;437&quot; height=&quot;311&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;The target&lt;/h2&gt;

&lt;p&gt;To start your Alfresco development experience, you need a development environment. Let's say you're more into this Maven and you'd rather leverage its capabilities instead of using the default ant based build system provided along with the SDK. In this tutorial, I'll guide you through the process of setting up from scratch your development environment. And by saying &quot;from scratch&quot;, I really mean it: we'll start from a fresh installed Linux box and the we will add piece over piece until we'll be see the Alfresco flower on our browser.  This will be a &lt;em&gt;basic&lt;/em&gt; tutorial, just to put in place the foundation for later improvements.&lt;/p&gt;

&lt;p&gt;I'm actually performing these steps in a virtual machine, so that next time a quick&amp;amp;dirty Alfresco PoC is required I might use this very same VM to start right away from a known, dev ready point.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;UPDATE: &lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;font-weight: normal;&quot;&gt;the Maven project structure I end up with at the end of this article can be downloaded directly from &lt;a title=&quot;alfresco-dev.skuro.tk // Tag: #01&quot; href=&quot;http://github.com/skuro/alfresco-dev.skuro.tk/tree/%2301&quot;&gt;GitHub&lt;/a&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Operating System&lt;/h2&gt;


&lt;p&gt;Ok, I assume you know your stuff and don't want to get a bore-some lesson on how to install Linux. The whole internet is polluted by billions of guides and tutorial since 199x, anyway, so let's just say I just completed the install process of Mint7 and I'm at my very first login. I would go for &lt;a href=&quot;http://ftp.heanet.ie/pub/linuxmint.com/stable/8/LinuxMint-8.iso&quot;&gt;Mint8&lt;/a&gt; if my current connection was fast enough to download it before I finish writing these notes, but whatever, there's nothing really bad in v7.&lt;/p&gt;

&lt;h2&gt;Tools&lt;/h2&gt;


&lt;p&gt;The shopping list here includes a JDK, Maven and... well, that should be it, theoretically. Unfortunately, due to a nasty &lt;a href=&quot;https://issues.alfresco.com/jira/browse/ALFCOM-3691&quot;&gt;regression&lt;/a&gt;, we're going to need a db. My choice goes to MySQL.&lt;/p&gt;

&lt;h3&gt;MySQL&lt;/h3&gt;


&lt;p&gt;First thing first, let's install it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~$ sudo apt-get install mysql-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When this is done, we have to create the db Alfresco is going to use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~$ mysql -u root
mysql&amp;amp;gt; CREATE DATABASE alf_jetty;
mysql&amp;amp;gt; GRANT ALL ON alf_jetty.* TO 'alfresco'@'%' IDENTIFIED BY 'alfresco';
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Username and password are the default for the &lt;a href=&quot;http://wiki.alfresco.com/wiki/Managing_Alfresco_Lifecyle_with_Maven&quot;&gt;maven stuff&lt;/a&gt; we're going to use.&lt;/p&gt;

&lt;h3&gt;Java&lt;/h3&gt;


&lt;p&gt;Java™ 5 &lt;a href=&quot;http://java.sun.com/products/archive/eol.policy.html&quot;&gt;has already passed on&lt;/a&gt;, let it rest in peace. Instead, go and install Java™ 6:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~$ sudo apt-get install sun-java6-jdk
[/code]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Maven&lt;/h3&gt;


&lt;p&gt;Hold on the temptation of installing Maven 3 or to ask apt-get to do this task for you. We're going to the official &lt;a href=&quot;http://maven.apache.org/download.html&quot;&gt;download page&lt;/a&gt; and following the links to get the latest stable 2.x release. You should end up with something like apache-maven-2.2.1-bin.tar.bz2 on your file system. Then do the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~$ cs /opt
~$ sudo tar xvjf apache-maven-2.2.1-bin.tar.bz2
~$ sudo ln -sfv /opt/apache-maven-2.2.1/bin/mvn /usr/bin/mvn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are less intrusive ways to bring your downloaded application into your PATH, but this is the quickest possible. Let's go on to the next step.&lt;/p&gt;

&lt;h3&gt;Plumbing&lt;/h3&gt;


&lt;p&gt;We're almost there, we just have to lay down our projects. Let's start with the Alfresco repo extension:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~$ mkdir -p development/alfresco-showcase
~$ cd development/alfresco-showcase
alfresco-showcase$ wget http://download.skuro.tk/alfresco-showcase/pom.xml
alfresco-showcase$ mvn archetype:generate -DarchetypeGroupId=com.sourcesense.alfresco \
 -DarchetypeArtifactId=maven-alfresco-extension-archetype \
 -DarchetypeVersion=1.9.1 \
 -DgroupId=it.sk.alfresco \
 -DartifactId=alfresco-showcase-extension \
 -Dversion=1.0-SNAPSHOT \
 -DarchetypeRepository=http://maven.alfresco.com/nexus/content/repositories/releases \
 -DinteractiveMode=false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The POM I'm making available &lt;a href=&quot;http://download.skuro.tk/alfresco-showcase/pom.xml&quot;&gt;here&lt;/a&gt; is just a very basically one, I'm using it here just for you to speed up the process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE: &lt;/strong&gt; as others pointed me out, it looks like you somehow need to download such a pom for the whole thing to stand up. That's simply not true, I'm just building a more complex dev environment and it's better if we have some structure in place. This includes having a parent project, along with its parent pom, with nested projects registered as its modules. These will come in the next posts. But that's just part of the reason for this pom to be here: I also tend to be &lt;a href=&quot;http://blogoscoped.com/archive/2005-08-24-n14.html&quot;&gt;lazy&lt;/a&gt;, so that letting you download it was easier than explaining myself. Note to self: thou shalt not post anything at 2am.&lt;/p&gt;

&lt;h3&gt;First achievement&lt;/h3&gt;


&lt;p&gt;Ok, let's stop here now and see what we've done by now. Go to the alfresco-showcase folder and type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alfresco-showcase$ MAVEN_OPTS=&quot;-Xmx512m -XX:MaxPermSize=128m&quot; \
 mvn clean install -Prun
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will start a local jetty instance where Alfresco 3.2 community will be deployed. So, if you now point your browser to &lt;code&gt;http://localhost:8080/alfresco&lt;/code&gt; you will finally see that flower we talked about at the beginning of this post.&lt;/p&gt;

&lt;h2&gt;Next steps&lt;/h2&gt;


&lt;p&gt;That's it for now, but other blocks are still missing: what about AMPs? And WCM? And does Share fits in the picture? I'll cover all the points in the next episodes of this series. See you there!&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Alfresco ACL on WCM WebForms, an howto</title>
  <link href="http://skuro.tk/2010/01/12/alfresco-acl-on-wcm-webforms-an-howto/"/>
  <updated>2010-01-12T00:00:00+01:00</updated>
  <id>http://skuro.tk/2010/01/12/alfresco-acl-on-wcm-webforms-an-howto/</id>
  <summary type="html">&lt;p&gt;When it comes to setting up an Alfresco WebProjects, you configure it to make use of a set of WebForms already available on the Alfresco repository. From that moment on, every user with write rights on the web project will be able to pick one web form and push some content through it into the AVM repository. But what if you want to forbid some users to actually make use of some web forms? The default Alfresco doesn't present any GUI control that allows you to define web forms level ACLs, but in facts there's a way to define them in an easy way, without the need of any real customization. Let's see how to do that on the Alfresco WCM we setup in the previous chapters of this series.&lt;/p&gt;

&lt;h2&gt;The idea&lt;/h2&gt;

&lt;p&gt;So, we want to be able to relate web forms and users or groups, thus restricting access to web forms depending on your credentials. We want to configure a number of web forms to be available on the web project, while users will see only the ones they've access to when trying to create some contents, so that dropdowns and links will appear only when it's appropriate. Moreover, we do not want to waste our time on custom code, we just want Alfresco to do its job.&lt;/p&gt;

&lt;p&gt;The way we are going to address this requirement is through the use of real ACL setup configured on the web forms themselves, so that the Alfresco permission checks will be able to trim the list of available web forms to the users whenever they ask for create content. Sounds reasonable, right?&lt;/p&gt;

&lt;h2&gt;Bug!&lt;/h2&gt;


&lt;p&gt;As a disclaimer, I must say the proposed approach doesn't work with a vanilla Alfresco3.2r because of a &lt;a href=&quot;https://issues.alfresco.com/jira/browse/ETHREEOH-2595&quot;&gt;nasty bug&lt;/a&gt; that will throw Exceptions all over the place once you configured restrictive ACLs on web forms. Thanks to the OpenSource nature of Alfresco, and thanks to &lt;a href=&quot;http://twitter.com/bradsdavis&quot;&gt;Brad Davis&lt;/a&gt; that provided a patch for it, we can just change the Alfresco source code and we'll be able to go forward. While we wait for a real mavenized Alfresco, this involves having the Alfresco SDK properly installed on your system, apply the patch and upload it to your local maven repo. To ease your life, you can just go with this last step using this patched &lt;a href=&quot;http://download.skuro.tk/alfresco/alfresco-3.2r-community-patched.war&quot;&gt;Alfresco WAR&lt;/a&gt; and type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;utopia-II:Downloads skuro$ mvn install:install-file -DartifactId=alfresco -DgroupId=org.alfresco \
 -Dversion=3.2r -Dtype=war -Dclassifier=community-patched -Dfile=alfresco-3.2r-community-patched.war
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that you have to switch to this artifact in your alfresco-extension project's pom dependencies.&lt;/p&gt;

&lt;h2&gt;Define the ACL&lt;/h2&gt;


&lt;p&gt;Now start up Alfresco and login as the &lt;em&gt;admin&lt;/em&gt;. To prove the ACL effectiveness, we will need two users and one group. In the following I'll assume the users are called &lt;em&gt;bob&lt;/em&gt; and &lt;em&gt;todd&lt;/em&gt; and the group, where only &lt;em&gt;bob&lt;/em&gt; is listed, is called &lt;em&gt;full-access&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now go to the &lt;em&gt;&lt;strong&gt;Company Home/Data Dictionary/Web Forms&lt;/strong&gt;&lt;/em&gt; folder and open the property sheet of the &lt;em&gt;&lt;strong&gt;article&lt;/strong&gt;&lt;/em&gt; web form folder.&lt;/p&gt;

&lt;p&gt;You'll be now able to customize the permissions on this level by clicking on &lt;em&gt;&lt;strong&gt;Manage Space users&lt;/strong&gt;&lt;/em&gt;, that will bring you to the ACL managing wizard. &lt;strong&gt;Uncheck&lt;/strong&gt; the &lt;strong&gt;&lt;em&gt;Inherit Parent Space Permissions&lt;/em&gt;&lt;/strong&gt; box and then click on &lt;em&gt;&lt;strong&gt;Invite..&lt;/strong&gt;&lt;/em&gt;, setting up the &lt;em&gt;full-access&lt;/em&gt; group to have the &lt;em&gt;&lt;strong&gt;Coordinator&lt;/strong&gt;&lt;/em&gt; role.&lt;/p&gt;

&lt;h2&gt;Test it&lt;/h2&gt;


&lt;p&gt;We're already done! Now, try to log in into Alfresco with the two users and verify that only bob can actually see the article web form appearing on the UI.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;


&lt;p&gt;This technique allows for a whole lot of use cases, where different divisions are not allowed to author content of different types. The only drawback of this solution is that when you have more than one web project per Alfresco instance, and you want to reuse the web forms, you will need to setup different groups for the different web projects (this will almost always be the case, anyway) and do the ACL configuration twice. Not that big deal, of course, but the lack of any centralized ACL managing tool will make it harder to maintain the permissions schemes.&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Are you good at Javascript? #1</title>
  <link href="http://skuro.tk/2009/12/15/are-you-good-at-javascript-1/"/>
  <updated>2009-12-15T00:00:00+01:00</updated>
  <id>http://skuro.tk/2009/12/15/are-you-good-at-javascript-1/</id>
  <summary type="html">&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-224&quot; title=&quot;javascript&quot; src=&quot;/img/post/javascript.jpg&quot; alt=&quot;javascript&quot; width=&quot;627&quot; height=&quot;126&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I'm not, really. Still I've been debugging some JS code just to remember why I was not &lt;a href=&quot;http://twitter.com/skuro/status/6367988240&quot;&gt;so excited&lt;/a&gt; in the past about the language: your code needs to cope with  browser specific crap.&lt;/p&gt;

&lt;p&gt;Now, are &lt;strong&gt;you&lt;/strong&gt; good at Javascript? If so, without running it, have a look at the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var array = [
  {
      key : 'value',
      foo : 'bar'
  },
  {
      key : 'eulav',
      foo : 'rab'
  },
];

for (var i = 0 ; i &amp;amp;lt; array.length ; i++)
{
  console.log (&amp;amp;quot;key -&amp;amp;gt; &amp;amp;quot; + array[i].key);
  console.log (&amp;amp;quot;foo -&amp;amp;gt; &amp;amp;quot; + array[i].foo);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;How many elements does the &lt;code&gt;array&lt;/code&gt; variable holds?&lt;/p&gt;

&lt;p&gt;That code actually hides an Evil&amp;#8482; syntax detail I discovered today. Now, since I've been recently approached by the viral ideas of &lt;a href=&quot;http://codemeself.blogspot.com/&quot;&gt;somebody&lt;/a&gt;, I felt compelled to fully understand the above code (and the bug we worked together from which this example came out). So if you really want some hints about what the hell is this all about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if you're not running Microsoft IE7, chances are you're not going to see anything weird in the console output :-)&lt;/li&gt;
&lt;li&gt;section 11.1.4 of the &lt;a href=&quot;http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf&quot;&gt;ECMAScript v3&lt;/a&gt; spec tells you all you need to know about the array initializers&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;After all, I'll be probably continuing to study this &quot;suddenly-a-hot-chick&quot; Javascript thing, hoping to find a better world where my eventual code will be living into than that I found in the old days.&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Google Chrome on Air&#8482;</title>
  <link href="http://skuro.tk/2009/12/04/google-chrome-on-air%25e2%2584%25a2/"/>
  <updated>2009-12-04T00:00:00+01:00</updated>
  <id>http://skuro.tk/2009/12/04/google-chrome-on-air%25e2%2584%25a2/</id>
  <summary type="html">&lt;p&gt;&lt;img class=&quot;size-full wp-image-210 aligncenter&quot; title=&quot;chrome-ff&quot; src=&quot;/img/post/chrome-ff.png&quot; alt=&quot;Chrome VS Firefox&quot; width=&quot;549&quot; height=&quot;230&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Today I eventually made one big decision, dropping &lt;a href=&quot;http://www.mozilla-europe.org/en/firefox/&quot;&gt;Firefox&lt;/a&gt; (call it Shiretoko, if you want) as my default browser and embracing &lt;a href=&quot;http://www.google.com/chrome&quot;&gt;Chrome&lt;/a&gt;. Why? Well, they're right: Chome is &lt;strong&gt;fast&lt;/strong&gt;. Really fast.&lt;/p&gt;

&lt;p&gt;It is not even a matter of how quick it's able to render a web page or to execute JS code (though that's also an &lt;a href=&quot;http://code.google.com/p/v8/&quot;&gt;interesting topic&lt;/a&gt;) that lead me to the decision, I just happened to start Chrome, browse a bit, open some different windows with some 20 tabs each, and then, from &lt;a href=&quot;http://www.tweetdeck.com/beta/&quot;&gt;TweetDeck&lt;/a&gt;, I clicked on a link. That's exactly when it all started. I mean Firefox, begun to start. Intentional wordplay.&lt;/p&gt;

&lt;p&gt;After reindexing my whole home folder, it finally showed up some content. It might even be that I installed too many plugins (&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/1843&quot;&gt;firebug&lt;/a&gt;, &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/9527&quot;&gt;ubiquity&lt;/a&gt;, &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/2079&quot;&gt;seleniumIDE&lt;/a&gt;, &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/3006&quot;&gt;downloadHelper&lt;/a&gt;, and &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/59&quot;&gt;userAgent switcher&lt;/a&gt;, that's it), but it still needed~10s before showing up anything, not to steal any credit from the waiting time on loading my saved sessions of 2 windows with around 10 tabs each.&lt;/p&gt;

&lt;p&gt;Then I decided to give it a try: I restarted Chrome. And that was the moment I decided I don't want to waste my time wating for Firefox startup. Chrome -&amp;gt; Options -&amp;gt; Make Chrome my default browser.&lt;/p&gt;

&lt;p&gt;Now we come at the problem mentioned in the subject: even if Chrome is now my default browser, Adobe Air applications such as TweetDeck still trigger a new Firefox tab upon clicks on an HTTP link. I googled around (too much google, I know. And it's getting worse as I speak, I fear!) just to find a bunch &lt;a href=&quot;http://blog.andreaolivato.net/open-source/change-adobe-air-apps-default-browser.html&quot;&gt;crazy guys&lt;/a&gt; editing binary libraries using &lt;a href=&quot;http://www.vim.org/&quot;&gt;vim&lt;/a&gt;. Although I really love vim, I was pleased to find an &lt;a href=&quot;http://blog.andreaolivato.net/open-source/change-adobe-air-apps-default-browser.html#comment-13651946&quot;&gt;interesting comment&lt;/a&gt; that led to a &lt;a href=&quot;http://www.roytanck.com/2009/08/26/getting-adobe-air-to-use-the-default-browser-under-ubuntu/&quot;&gt;solution&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export GNOME_DESKTOP_SESSION_ID=Default
/opt/TweetDeck/bin/TweetDeck
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I will miss a lot my dear Ubiquity extension, and I still think Firefox is not &lt;a href=&quot;http://www.microsoft.com/windows/Internet-explorer/default.aspx&quot;&gt;that bad&lt;/a&gt; as a browser. But I spend 95% of my computer life on a browser, as Google guys didn't have troubles to &lt;a href=&quot;http://googleblog.blogspot.com/2009/07/introducing-google-chrome-os.html&quot;&gt;argue&lt;/a&gt;, and therefore speed matters. A lot.&lt;/p&gt;
</summary>
</entry>


---
---
<entry>
  <title>Alfresco ECM moving forward on the Maven path</title>
  <link href="http://skuro.tk/2009/12/03/alfresco-ecm-moving-forward-on-the-maven-path/"/>
  <updated>2009-12-03T00:00:00+01:00</updated>
  <id>http://skuro.tk/2009/12/03/alfresco-ecm-moving-forward-on-the-maven-path/</id>
  <summary type="html">&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-219&quot; title=&quot;mavenalfresco&quot; src=&quot;/img/post/mavenalfresco.jpg&quot; alt=&quot;mavenalfresco&quot; width=&quot;462&quot; height=&quot;106&quot; /&gt;&lt;/p&gt;

&lt;p&gt;These days some milestones have been placed that are both consolidating past efforts and promising great improvements on maven based processes around &lt;a href=&quot;http://www.alfresco.com&quot;&gt;Alfresco ECM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First and foremost, to prove the Alfresco commitment in mavenizing the product, have a look at their hosted &lt;a href=&quot;http://sonatype.com/&quot;&gt;Sonatype&lt;/a&gt; &lt;a href=&quot;http://maven.alfresco.com&quot;&gt;Nexus instance&lt;/a&gt;. Even if big changes &lt;a href=&quot;http://maven.alfresco.com/nexus/content/repositories/releases/org/alfresco/alfresco/3.2r/alfresco-3.2r.pom&quot;&gt;are still due&lt;/a&gt;, you'll be more than happy to find Alfresco dismembered in maven artifacts, each one with it's POM. Most of them are just a kind of placeholders, but here and there you can find some &lt;a href=&quot;http://maven.alfresco.com/nexus/content/repositories/releases/org/alfresco/alfresco-jlan/3.3.0-preview-1/alfresco-jlan-3.3.0-preview-1.pom&quot;&gt;hints&lt;/a&gt; of what they're going to be.&lt;/p&gt;

&lt;p&gt;Aside, the same Nexus instance also offers a new home for the &lt;a href=&quot;http://maven.alfresco.com/nexus/content/repositories/releases/com/sourcesense/&quot;&gt;components&lt;/a&gt; developed within &lt;a href=&quot;http://www.sourcesense.com&quot;&gt;Sourcesense &lt;/a&gt;that up until now are the only way to &lt;a href=&quot;http://mindthegab.com/2009/11/07/maven-alfresco-lifecycle-to-gather-all-maven-alfresco-components/&quot;&gt;leverage Maven when dealing with Alfresco&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A &lt;a href=&quot;http://mindthegab.com/2009/12/02/dreams-come-true-launching-the-alfresco-community-maven-repository/&quot;&gt;great post&lt;/a&gt; from &lt;a href=&quot;http://twitter.com/mindthegabz&quot;&gt;the guy&lt;/a&gt; that made it happen will provide you more and more &lt;a href=&quot;http://maven.alfresco.com/nexus/content/repositories/alfresco-docs/maven-alfresco-lifecycle/index.html&quot;&gt;insights&lt;/a&gt;, &lt;a href=&quot;http://code.google.com/p/maven-alfresco-archetypes/&quot;&gt;pointers&lt;/a&gt; and stuff. All with a Maven taste.&lt;/p&gt;
</summary>
</entry>



</feed>
